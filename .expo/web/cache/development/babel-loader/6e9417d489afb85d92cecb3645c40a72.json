{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jhay-tech/Documents/React Native/React Cryptocurrency App/CryptocurrencyAppClone/screens/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { dummyData, COLORS, SIZES, FONTS, icons, images } from \"../constants\";\nimport { PriceAlert, TransactionHistory } from \"../components\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  React.useEffect(function () {\n    LogBox.ignoreLogs(['VirtualizedLists should never be nested']);\n  }, []);\n\n  function renderHeader() {\n    var _this2 = this;\n\n    var renderItems = function renderItems(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          width: 180,\n          paddingVertical: SIZES.padding,\n          paddingHorizontal: SIZES.padding,\n          marginLeft: index == 0 ? SIZES.padding : 0,\n          marginRight: SIZES.radius,\n          borderRadius: 10,\n          backgroundColor: COLORS.white\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: item.image,\n        resizeMode: \"cover\",\n        style: {\n          marginTop: 5,\n          width: 25,\n          height: 25\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          marginLeft: SIZES.base\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.h2),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, item.currency), React.createElement(Text, {\n        style: _objectSpread({\n          color: COLORS.gray\n        }, FONTS.body3),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, item.code))), React.createElement(View, {\n        style: {\n          marginTop: SIZES.radius\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.h2),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"$\", item.amount), React.createElement(Text, {\n        style: _objectSpread({\n          color: item.type == 'I' ? COLORS.green : COLORS.red\n        }, FONTS.h3),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, item.changes)));\n    };\n\n    return React.createElement(View, {\n      style: _objectSpread({\n        width: '100%',\n        height: 290\n      }, styles.shadow),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, React.createElement(ImageBackground, {\n      source: images.banner,\n      resizeMode: \"cover\",\n      style: {\n        flex: 1,\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: SIZES.padding * 2,\n        width: '100%',\n        alignItems: 'flex-end',\n        paddingHorizontal: SIZES.padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: 35,\n        height: 35,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      onPress: function onPress() {\n        return console.warn('notification pressed');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      source: icons.notification_white,\n      resizeMode: \"contain\",\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }))), React.createElement(View, {\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white\n      }, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Your Portfolio Balance\"), React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white,\n        marginTop: SIZES.base\n      }, FONTS.h1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"$\", dummyData.portfolio.balance), React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white\n      }, FONTS.body5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"$\", dummyData.portfolio.changes, \" Last 24 hours\")), React.createElement(View, {\n      style: {\n        position: 'absolute',\n        bottom: '-30%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white,\n        marginLeft: SIZES.padding\n      }, FONTS.h2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"Trending\"), React.createElement(FlatList, {\n      contentContainerStyle: {\n        marginTop: SIZES.base\n      },\n      data: dummyData.trendingCurrencies,\n      renderItem: renderItems,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.id;\n      },\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  function renderPriceAlert() {\n    return React.createElement(PriceAlert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function renderNotice() {\n    return React.createElement(View, {\n      style: _objectSpread({\n        marginTop: SIZES.padding,\n        marginHorizontal: SIZES.padding,\n        padding: 20,\n        borderRadius: SIZES.radius,\n        backgroundColor: COLORS.secondary\n      }, styles.shadow),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white\n      }, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"Investing Safety\"), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({\n        color: COLORS.white,\n        marginTop: SIZES.base\n      }, FONTS.body4), {}, {\n        lineHeight: 18\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, \"It's very difficult to time an investment, especially when the market is volatile. Learn how to use dollar cost averaging to your advantage.\"), React.createElement(TouchableOpacity, {\n      style: {\n        marginTop: SIZES.base\n      },\n      onPress: function onPress() {\n        return console.warn('Learn more');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        textDecorationLine: 'underline',\n        color: COLORS.green\n      }, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Learn More\")));\n  }\n\n  function renderTransactionHistory() {\n    return React.createElement(TransactionHistory, {\n      customContainerStyle: _objectSpread({}, styles.shadow),\n      history: dummyData.transactionHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingBottom: 130\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, renderHeader(), renderPriceAlert(), renderNotice(), renderTransactionHistory()));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.30,\n    shadowRadius: 4.65,\n    elevation: 8\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/home/jhay-tech/Documents/React Native/React Cryptocurrency App/CryptocurrencyAppClone/screens/Home.js"],"names":["React","LogBox","dummyData","COLORS","SIZES","FONTS","icons","images","PriceAlert","TransactionHistory","Home","navigation","useEffect","ignoreLogs","renderHeader","renderItems","item","index","width","paddingVertical","padding","paddingHorizontal","marginLeft","marginRight","radius","borderRadius","backgroundColor","white","flexDirection","image","marginTop","height","base","h2","currency","color","gray","body3","code","amount","type","green","red","h3","changes","styles","shadow","banner","flex","alignItems","justifyContent","console","warn","notification_white","h1","portfolio","balance","body5","position","bottom","trendingCurrencies","id","renderPriceAlert","renderNotice","marginHorizontal","secondary","body4","lineHeight","textDecorationLine","renderTransactionHistory","transactionHistory","paddingBottom","StyleSheet","create","container","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text, \n        TouchableOpacity,\n        View,\n        StyleSheet,\n        ScrollView,\n        ImageBackground,\n        FlatList,\n        Image,\n        LogBox\n    } from 'react-native'\nimport {dummyData, COLORS, SIZES, FONTS, icons, images} from '../constants'\nimport {PriceAlert, TransactionHistory} from '../components'\n\n\nconst Home = ({navigation}) => {\n    React.useEffect(() => {\n        LogBox.ignoreLogs(['VirtualizedLists should never be nested'])\n    }, [])\n        // renderHeader\n    function renderHeader() {\n        const renderItems = ({item, index}) => {\n         \n        return (\n            <TouchableOpacity\n            style={{\n                width: 180,\n                paddingVertical: SIZES.padding,\n                paddingHorizontal: SIZES.padding,\n                marginLeft: index == 0 ? SIZES.padding : 0,\n                marginRight: SIZES.radius,\n                borderRadius: 10,\n                backgroundColor: COLORS.white\n            }}\n            >\n            {/* Currency */}\n                <View style={{ flexDirection: 'row'}}>\n                    <View>\n                        <Image \n                            source={item.image}\n                            resizeMode='cover'\n                            style={{\n                                marginTop: 5,\n                                width: 25,\n                                height: 25\n                            }}\n                        />\n                    </View>\n                    <View style={{ marginLeft: SIZES.base }}>\n                        <Text style={{...FONTS.h2}}>{item.currency}</Text>\n                        <Text style={{color: COLORS.gray, ...FONTS.body3}}>{item.code}</Text>\n                    </View>\n\n\n                </View>\n\n                {/* Value */}\n                <View style={{marginTop: SIZES.radius}}>\n                    <Text style={{...FONTS.h2}}>${item.amount}</Text>\n                    <Text style={{color: item.type == 'I'? COLORS.green: COLORS.red, ...FONTS.h3 }}>{item.changes}</Text>\n                </View>\n            </TouchableOpacity>\n        )\n        }\n        return(\n            <View style={{\n                width: '100%',\n                height: 290,\n                ...styles.shadow\n            }}>\n                <ImageBackground\n                    source={images.banner}\n                    resizeMode='cover'\n                    style={{\n                        flex: 1,\n                        alignItems: 'center'\n                    }}\n                >\n                    {/* Header Bar */}\n                    <View\n                        style={{\n                            marginTop: SIZES.padding * 2,\n                            width: '100%',\n                            alignItems: 'flex-end',\n                            paddingHorizontal: SIZES.padding\n                        }}\n                    >   \n                        <TouchableOpacity\n                            style={{\n                                width: 35,\n                                height: 35,\n                                justifyContent: 'center',\n                                alignItems: 'center'\n                            }}\n                            onPress={()=> console.warn('notification pressed')}\n                        >\n                            <Image \n                                source={icons.notification_white}\n                                resizeMode='contain'\n                                style={{\n                                    flex: 1\n                                }}\n                            />\n                        </TouchableOpacity>\n                    </View>\n                    {/* Balance */}\n                    <View\n                        style={{\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}\n                    >\n                        <Text style={{color: COLORS.white, ...FONTS.h3}}>Your Portfolio Balance</Text>\n                        <Text style={{color: COLORS.white, marginTop: SIZES.base, ...FONTS.h1}}>${dummyData.portfolio.balance}</Text>\n                        <Text style={{color: COLORS.white, ...FONTS.body5}}>${dummyData.portfolio.changes} Last 24 hours</Text>\n\n                    </View>\n\n                    {/* Trending */}\n                    <View style={{\n                        position: 'absolute',\n                        bottom: '-30%',\n\n                    }}>\n                        <Text style={{color: COLORS.white, marginLeft: SIZES.padding, ...FONTS.h2}}>Trending</Text>\n                        <FlatList \n                            contentContainerStyle={{marginTop: SIZES.base}}\n                            data={dummyData.trendingCurrencies}\n                            renderItem={renderItems}\n                            keyExtractor={item => `${item.id}`}\n                            horizontal\n                            showsHorizontalScrollIndicator={false}\n                        />\n                    </View>\n                </ImageBackground>\n            </View>\n        )\n    }\n\n        // renderPriceAlert\n    function renderPriceAlert() {\n        return(\n            <PriceAlert />\n        )\n    }\n\n        // renderNotice\n    function renderNotice() {\n     return(\n         <View\n            style={{\n                marginTop: SIZES.padding,\n                marginHorizontal: SIZES.padding,\n                padding: 20,\n                borderRadius: SIZES.radius,\n                backgroundColor: COLORS.secondary,\n                ...styles.shadow\n            }}\n         >\n            <Text style={{color: COLORS.white, ...FONTS.h3}}>Investing Safety</Text>\n            <Text style={{color: COLORS.white, marginTop: SIZES.base,\n            ...FONTS.body4, lineHeight: 18}}>It's very difficult to time an investment, \n                   especially when the market is volatile. Learn\n                   how to use dollar cost averaging to your advantage.</Text>\n            <TouchableOpacity\n                style={{\n                    marginTop: SIZES.base\n                }}\n                onPress={() => console.warn('Learn more')}\n            >\n                <Text style={{textDecorationLine: 'underline', \n                color: COLORS.green, ...FONTS.h3}}>Learn More</Text>\n            </TouchableOpacity>\n         </View>\n     )   \n    }\n\n     // renderTransactionHistory\n    function renderTransactionHistory() {\n        return(\n            <TransactionHistory \n                customContainerStyle={{...styles.shadow}}\n                history = {dummyData.transactionHistory}\n            />\n        )\n    }\n    return(\n        <ScrollView>\n            <View style={{flex: 1, paddingBottom: 130}}>\n                {renderHeader()}\n                {renderPriceAlert()}\n                {renderNotice()}\n                {renderTransactionHistory()}\n            </View>\n        </ScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    shadow: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 4\n        },\n        shadowOpacity: 0.30,\n        shadowRadius: 4.65,\n        elevation: 8\n    }\n})\n\nexport default Home"]},"metadata":{},"sourceType":"module"}