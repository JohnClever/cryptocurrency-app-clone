{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jhay-tech/Documents/React Native/React Cryptocurrency App/CryptocurrencyAppClone/navigation/tabs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createBottomTabNavigator, BottomTabBar } from '@react-navigation/bottom-tabs';\nimport { Home } from \"../screens\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { COLORS, SIZES, FONTS, icons } from \"../constants\";\nvar Tab = createBottomTabNavigator();\n\nvar TabCustomButtonOne = function TabCustomButtonOne(_ref) {\n  var children = _ref.children,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    style: _objectSpread({\n      top: -30,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, styles.shadow),\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [COLORS.primary, COLORS.secondary],\n    style: {\n      width: 70,\n      height: 70,\n      borderRadius: 35\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, children));\n};\n\nvar Tabs = function Tabs() {\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        elevation: 0,\n        backgroundColor: COLORS.white,\n        borderTopColor: 'transparent',\n        height: 100\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.home,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.primary : COLORS.black\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }\n        }), React.createElement(Text, {\n          style: _objectSpread({\n            color: focused ? COLORS.primary : COLORS.black\n          }, FONTS.body5),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }\n        }, \"HOME\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Portfolio\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.pie_chart,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.primary : COLORS.black\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }\n        }), React.createElement(Text, {\n          style: _objectSpread({\n            color: focused ? COLORS.primary : COLORS.black\n          }, FONTS.body5),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }\n        }, \"PORTFOLIO\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Transaction\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(Image, {\n          source: icons.transaction,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: COLORS.white\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabCustomButtonOne, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Prices\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.line_graph,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.primary : COLORS.black\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }\n        }), React.createElement(Text, {\n          style: _objectSpread({\n            color: focused ? COLORS.primary : COLORS.black\n          }, FONTS.body5),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }\n        }, \"PRICES\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: icons.settings,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30,\n            tintColor: focused ? COLORS.primary : COLORS.black\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }\n        }), React.createElement(Text, {\n          style: _objectSpread({\n            color: focused ? COLORS.primary : COLORS.black\n          }, FONTS.body5),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }\n        }, \"SETTINGS\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: COLORS.primary,\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  }\n});\nexport default Tabs;","map":{"version":3,"sources":["/home/jhay-tech/Documents/React Native/React Cryptocurrency App/CryptocurrencyAppClone/navigation/tabs.js"],"names":["React","createBottomTabNavigator","BottomTabBar","Home","LinearGradient","COLORS","SIZES","FONTS","icons","Tab","TabCustomButtonOne","children","onPress","top","alignItems","justifyContent","styles","shadow","primary","secondary","width","height","borderRadius","Tabs","showLabel","style","position","bottom","left","right","elevation","backgroundColor","white","borderTopColor","tabBarIcon","focused","home","tintColor","black","color","body5","pie_chart","transaction","tabBarButton","props","line_graph","settings","StyleSheet","create","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {View, Image, StyleSheet, TouchableOpacity, Text} from 'react-native'\nimport {createBottomTabNavigator, BottomTabBar} from '@react-navigation/bottom-tabs'\nimport {Home} from '../screens'\nimport {LinearGradient} from 'expo-linear-gradient'\nimport {COLORS, SIZES, FONTS, icons} from '../constants'\n\n\nconst Tab = createBottomTabNavigator()\n\nconst TabCustomButtonOne = ({children, onPress}) => {\n    return(\n        <TouchableOpacity\n            style={{\n                top: -30,\n                alignItems: 'center',\n                justifyContent: 'center',\n                ...styles.shadow\n            }}\n            onPress={onPress}\n        >\n            <LinearGradient\n                colors={[COLORS.primary, COLORS.secondary]}\n                style={{width: 70, height: 70, borderRadius: 35}}\n            >\n                    {children}\n            </LinearGradient>\n        </TouchableOpacity>\n    )\n}\n\nconst Tabs = () => {\n    return(\n        <Tab.Navigator\n            tabBarOptions = {{\n                showLabel: false,\n                style: {\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    elevation: 0,\n                    backgroundColor: COLORS.white,\n                    borderTopColor: 'transparent',\n                    height: 100\n                }\n            }}\n        >\n            <Tab.Screen\n                name = \"Home\"\n                component = {Home}\n                options={{\n                    tabBarIcon: ({focused}) => (\n                        <View\n                            style={{alignItems: 'center', justifyContent: 'center'}}\n                        >\n                            <Image \n                                source={icons.home}\n                                resizeMode=\"contain\"\n                                style={{width: 30, height: 30, tintColor: focused ?COLORS.primary: COLORS.black}}\n\n                            />\n                            <Text style={{color: focused ? COLORS.primary : COLORS.black, ...FONTS.body5}}>HOME</Text>\n                        </View>\n                    )\n                }}\n            />\n            <Tab.Screen \n                name = \"Portfolio\"\n                component = {Home}\n                options = {{\n                    tabBarIcon: ({focused}) => (\n                        <View style={{alignItems: 'center', justifyContent: 'center'}}>\n                            <Image \n                                source={icons.pie_chart}\n                                resizeMode=\"contain\"\n                                style={{\n                                    width: 30,\n                                    height: 30,\n                                    tintColor: focused ? COLORS.primary:COLORS.black\n                                }}\n                            />\n                            <Text style={{color: focused ? COLORS.primary:COLORS.black, ...FONTS.body5}}>PORTFOLIO</Text>\n                        </View>\n                    )\n                }}\n\n            />\n            <Tab.Screen \n                name = \"Transaction\"\n                component = {Home}\n                options={{\n                    tabBarIcon: ({focused}) => (\n                        <Image \n                            source={icons.transaction}\n                            resizeMode='contain'\n                            style={{\n                                width: 30,\n                                height: 30,\n                                tintColor: COLORS.white\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabCustomButtonOne \n                            {...props}\n                        />\n                    )\n                }}\n                \n            />\n            <Tab.Screen \n                name = \"Prices\"\n                component = {Home}\n                options={{\n                    tabBarIcon: ({focused}) => (\n                        <View style={{justifyContent: 'center', alignItems: 'center'}}>\n                            <Image \n                                source={icons.line_graph}\n                                resizeMode=\"contain\"\n                                style={{\n                                    width: 30,\n                                    height: 30,\n                                    tintColor: focused ? COLORS.primary: COLORS.black\n                                }}\n                            />\n                            <Text style={{color: focused ? COLORS.primary: COLORS.black, ...FONTS.body5}}>PRICES</Text>\n                        </View>\n                    )\n                }}\n            />\n            <Tab.Screen \n                name = \"Settings\"\n                component = {Home}\n                options={{\n                    tabBarIcon: ({focused}) => (\n                        <View style={{alignItems: 'center', justifyContent: 'center'}}>\n                            <Image \n                                source={icons.settings}\n                                resizeMode=\"contain\"\n                                style={{\n                                    width: 30,\n                                    height: 30,\n                                    tintColor: focused ? COLORS.primary : COLORS.black\n                                }}\n                            />\n                            <Text style={{color: focused ? COLORS.primary : COLORS.black, ...FONTS.body5}}>SETTINGS</Text>\n                        </View>\n                    )\n                }}\n            />\n        </Tab.Navigator>\n    )\n}\n\nconst styles = StyleSheet.create({\n    shadow: {\n        shadowColor: COLORS.primary,\n        shadowOffset: {\n            width: 0,\n            height: 10,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    }\n})\n\nexport default Tabs"]},"metadata":{},"sourceType":"module"}